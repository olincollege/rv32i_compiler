Token(type=INT_TYPE, lexeme="int", line=1)
Token(type=IDENTIFIER, lexeme="main", line=1)
Token(type=LPAREN, lexeme="(", line=1)
Token(type=RPAREN, lexeme=")", line=1)
Token(type=LBRACE, lexeme="{", line=1)
Token(type=INT_TYPE, lexeme="int", line=2)
Token(type=IDENTIFIER, lexeme="a", line=2)
Token(type=ASSIGN, lexeme="=", line=2)
Token(type=INT, lexeme="0", line=2)
Token(type=SEMICOLON, lexeme=";", line=2)
Token(type=INT_TYPE, lexeme="int", line=3)
Token(type=IDENTIFIER, lexeme="b", line=3)
Token(type=ASSIGN, lexeme="=", line=3)
Token(type=INT, lexeme="0", line=3)
Token(type=SEMICOLON, lexeme=";", line=3)
Token(type=INT_TYPE, lexeme="int", line=4)
Token(type=IDENTIFIER, lexeme="c", line=4)
Token(type=ASSIGN, lexeme="=", line=4)
Token(type=IDENTIFIER, lexeme="a", line=4)
Token(type=PLUS, lexeme="+", line=4)
Token(type=IDENTIFIER, lexeme="b", line=4)
Token(type=SEMICOLON, lexeme=";", line=4)
Token(type=WHILE, lexeme="while", line=5)
Token(type=LPAREN, lexeme="(", line=5)
Token(type=IDENTIFIER, lexeme="a", line=5)
Token(type=GT, lexeme=">", line=5)
Token(type=IDENTIFIER, lexeme="b", line=5)
Token(type=RPAREN, lexeme=")", line=5)
Token(type=LBRACE, lexeme="{", line=5)
Token(type=INT_TYPE, lexeme="int", line=6)
Token(type=IDENTIFIER, lexeme="d", line=6)
Token(type=ASSIGN, lexeme="=", line=6)
Token(type=IDENTIFIER, lexeme="a", line=6)
Token(type=SEMICOLON, lexeme=";", line=6)
Token(type=RBRACE, lexeme="}", line=7)
Token(type=IF, lexeme="if", line=8)
Token(type=LPAREN, lexeme="(", line=8)
Token(type=IDENTIFIER, lexeme="a", line=8)
Token(type=LT, lexeme="<", line=8)
Token(type=IDENTIFIER, lexeme="c", line=8)
Token(type=RPAREN, lexeme=")", line=8)
Token(type=LBRACE, lexeme="{", line=8)
Token(type=INT_TYPE, lexeme="int", line=9)
Token(type=IDENTIFIER, lexeme="a", line=9)
Token(type=ASSIGN, lexeme="=", line=9)
Token(type=INT, lexeme="1", line=9)
Token(type=MINUS, lexeme="-", line=9)
Token(type=INT, lexeme="2", line=9)
Token(type=SEMICOLON, lexeme=";", line=9)
Token(type=RBRACE, lexeme="}", line=10)
Token(type=ELSE, lexeme="else", line=11)
Token(type=IF, lexeme="if", line=11)
Token(type=LPAREN, lexeme="(", line=11)
Token(type=IDENTIFIER, lexeme="c", line=11)
Token(type=GT, lexeme=">", line=11)
Token(type=INT, lexeme="3", line=11)
Token(type=RPAREN, lexeme=")", line=11)
Token(type=LBRACE, lexeme="{", line=11)
Token(type=RETURN, lexeme="return", line=12)
Token(type=INT, lexeme="1", line=12)
Token(type=SEMICOLON, lexeme=";", line=12)
Token(type=RBRACE, lexeme="}", line=13)
Token(type=ELSE, lexeme="else", line=14)
Token(type=LBRACE, lexeme="{", line=14)
Token(type=RETURN, lexeme="return", line=15)
Token(type=INT, lexeme="2", line=15)
Token(type=SEMICOLON, lexeme=";", line=15)
Token(type=RBRACE, lexeme="}", line=16)
Token(type=RETURN, lexeme="return", line=17)
Token(type=INT, lexeme="0", line=17)
Token(type=SEMICOLON, lexeme=";", line=17)
Token(type=RBRACE, lexeme="}", line=18)
Token(type=IDENTIFIER, lexeme="ulePath", line=19)
Token(type=ASSIGN, lexeme="=", line=19)
Token(type=IDENTIFIER, lexeme="C", line=19)
Token(type=UNKNOWN, lexeme="Unexpected character.", line=19)
Token(type=UNKNOWN, lexeme="Unexpected character.", line=19)
Token(type=IDENTIFIER, lexeme="Users", line=19)
Token(type=UNKNOWN, lexeme="Unexpected character.", line=19)
Token(type=IDENTIFIER, lexeme="n", line=19)
